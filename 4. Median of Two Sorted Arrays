4. Median of Two Sorted Arrays

APPROACH1:
  -- use two pointer approach
  -- merge both the array in sorted way and store them in temp array
  -- Now, calculate the size of temp array and calculate median
  -- catch is use 2.0 to divide to get the final ans in float 
  -- return the ans

CODE:
class Solution {
public:
    double findMedianSortedArrays(vector<int> &nums1, vector<int> &nums2)
    {
        double ans = 0;
        int i = 0;
        int j = 0;

        vector<int> temp;
        int n1 = nums1.size();
        int n2 = nums2.size();

        while (i < n1 && j < n2)
        {
            if (nums1[i] < nums2[j])
            {
                temp.push_back(nums1[i]);
                i++;
            }
            else
            {
                temp.push_back(nums2[j]);
                j++;
            }
        }
        while(i<n1){
            temp.push_back(nums1[i]);
            i++;
        }
        while(j<n2){
            temp.push_back(nums2[j]);
            j++;
        }
        if(temp.size()%2==0){
            ans = (temp[temp.size()/2] + temp[temp.size()/2-1]) / 2.0;

        }
        else{
            ans = temp[temp.size()/2];
        }
        return ans;
    }
};
